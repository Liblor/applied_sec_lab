---
- hosts: ansservers
  tasks:
    - name: Create folder for TLS CSR and certificates
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ UNAME }}"
        group: "{{ UNAME }}"
      with_items:
        - "/home/{{ UNAME }}/tls_csr"
        - "/home/{{ UNAME }}/tls_certs"

- hosts: all, !ansservers
  become: yes
  roles:
    - pyopenssl
  tasks:
    - name: Create public folder for certs
      file:
        path: /etc/pki/tls/certs
        state: directory
        mode: 0755

    - name: Create user private folders for TLS keys and CSR
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ UNAME }}"
        group: "{{ UNAME }}"
        mode: 0700
      with_items:
        - "/home/{{ UNAME }}/pki/private"
        - "/home/{{ UNAME }}/pki/csr"

    - name: Create HTTPS keys
      openssl_privatekey:
        path: "/home/{{ UNAME }}/pki/private/iMovies_{{ansible_hostname}}_tls_key.pem"
        type: RSA
        size: 4096
        force: "{{ FORCE_TLS_CERT_REGEN }}"

        owner: "{{ UNAME }}"
        group: "{{ UNAME }}"

    - name: Create CSR for HTTPS keys
      openssl_csr:
        path: "/home/{{ UNAME }}/pki/csr/iMovies_{{ansible_hostname}}_tls.csr"
        privatekey_path: "/home/{{ UNAME }}/pki/private/iMovies_{{ansible_hostname}}_tls_key.pem"

        country_name: "{{ COUNTRY_NAME }}"
        state_or_province_name: "{{ STATE_OR_PROVINCE_NAME }}"
        locality_name: "{{ LOCALITY_NAME }}"
        organization_name: "{{ ORGANIZATION_NAME }}"
        common_name: "iMovies {{ansible_hostname}}"
        # Externally reachable servers have the imovies domain as SAN
        subjectAltName: "{{ 'DNS:www.imovies.ch, ' + 'DNS:' + ansible_hostname if ('webservers' in groups and ansible_hostname in groups['webservers']) else 'DNS:' + ansible_hostname }}"

        key_usage:
          - digitalSignature
          - keyEncipherment

        extendedKeyUsage:
          - serverAuth
          - clientAuth

        force: "{{ FORCE_TLS_CERT_REGEN }}"

        owner: "{{ UNAME }}"
        group: "{{ UNAME }}"
    - name: Transfer CSR to config server
      synchronize:
        mode: pull
        src: "/home/{{ UNAME }}/pki/csr/iMovies_{{ansible_hostname}}_tls.csr"
        dest: "/home/{{ hostvars[groups['ansservers'][0]]['UNAME'] }}/tls_csr/"
        group: false
        owner: false
      delegate_to: "{{ groups['ansservers'][0] }}"

# The first core ca signs all internal tls certificates
- hosts: "{{ groups['certservers'][0] }}"
  become: yes
  tasks:
    - name: Create folders for TLS CSR and certificates
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ UNAME }}"
        group: "{{ UNAME }}"
      with_items:
        - "/home/{{ UNAME }}/tls_csr"
        - "/home/{{ UNAME }}/tls_certs"
        - "/home/{{ UNAME }}/tls_chains"

    - name: Transfer CSR to cert server
      synchronize:
        src: "/home/{{ hostvars[groups['ansservers'][0]]['UNAME'] }}/tls_csr/"
        dest: "/home/{{ UNAME }}/tls_csr/"
        group: false
        owner: false

    # Loop over all files in tls_csr and sign their certificate, the name of which
    # is for <name>.csr --> <name>.crt
    - name: Gather CSRs to sign
      find:
        paths: "/home/{{ UNAME }}/tls_csr"
        patterns: "*.csr"
      register: csr_files_glob

    - name: Sign remote server CSRs
      openssl_certificate:
        path: "/home/{{ UNAME }}/tls_certs/{{ item.path | basename | splitext | first }}.crt"
        csr_path: "{{ item.path }}"
        provider: ownca
        ownca_path: "/home/{{ UNAME }}/pki/certs/iMovies_{{ansible_hostname}}_Intermediate_CA.crt"
        ownca_privatekey_path: "/home/{{ UNAME }}/pki/private/iMovies_{{ansible_hostname}}_Intermediate_CA_key.pem"
        # Hack since the "+730d" syntax of this template seems to be broken
        ownca_not_after: "{{ lookup('pipe','date +\"%Y%m%d%H%M%SZ\" -d \"+365 days\"') }}"
        force: "{{ FORCE_TLS_CERT_REGEN }}"
      with_items:
        - "{{ csr_files_glob.files }}"

    - name: Create certificate chain
      shell: |
        cat "/home/{{ UNAME }}/tls_certs/{{ item.path | basename | splitext | first }}.crt" \
        "/home/{{ UNAME }}/pki/certs/iMovies_{{ansible_hostname}}_Intermediate_CA.crt" \
        > "/home/{{ UNAME }}/tls_chains/{{ item.path | basename | splitext | first }}.crt"
      when: FORCE_TLS_CERT_REGEN
      with_items:
        - "{{ csr_files_glob.files }}"

    - name: Transfer certs to config server
      synchronize:
        mode: pull
        src: "/home/{{ UNAME }}/tls_chains/"
        dest: "/home/{{ hostvars[groups['ansservers'][0]]['UNAME'] }}/tls_certs/"
        group: false
        owner: false
      when: FORCE_TLS_CERT_REGEN
      delegate_to: "{{ groups['ansservers'][0] }}"

- hosts: all, !ansservers
  become: yes
  tasks:
    - name: Transfer certificates to corresponding hosts
      synchronize:
        src: "/home/{{ hostvars[groups['ansservers'][0]]['UNAME'] }}/tls_certs/iMovies_{{ ansible_hostname }}_tls.crt"
        dest: /etc/pki/tls/certs/
      when: FORCE_TLS_CERT_REGEN

    - name: Fix certificate permissions
      file:
        path: "/etc/pki/tls/certs/iMovies_{{ ansible_hostname }}_tls.crt"
        owner: root
        group: root
        mode: 0644
      when: FORCE_TLS_CERT_REGEN


- hosts: dbservers
  become: yes
  tasks:
    - name: Creates directory for mariaDB keys
      file:
        path: /etc/mysql/keys
        state: directory
        owner: mysql
        group: mysql
        mode: 0700

    - name: Convert private key to pkcs#1
      command: "openssl rsa -in /home/{{ UNAME }}/pki/private/iMovies_{{ansible_hostname}}_tls_key.pem -out /etc/mysql/keys/iMovies_{{ inventory_hostname }}_tls_key.pem"

    - name: Fix mysql private key permissions
      file:
        path: "/etc/mysql/keys/iMovies_{{ inventory_hostname }}_tls_key.pem"
        owner: "{{ UNAME }}"
        group: "{{ UNAME }}"
        mode: 0600
