---
- hosts: ansservers
  connection: local
  become: yes
  roles:
    - pyopenssl
    - asl-ansserver-init
    - prepare-openssl-ca
  vars:
    ca_folder: "/home/{{ UNAME }}/root_ca"
    openssl_conf_name: Root-CA-openssl.cnf
    ca_cert_path: "/{{ VAGRANT_SHARED_FOLDERNAME }}/key_store/iMovies_Root_CA_crt.pem"
    ca_priv_key_path: "/{{ VAGRANT_SHARED_FOLDERNAME }}/key_store/iMovies_Root_CA_key.pem"
    crl_file_name: Root_CA_crl.pem
  tasks:
    - name: Store CA certificate on ansible host
      synchronize:
        src: "/{{ VAGRANT_SHARED_FOLDERNAME }}/key_store/iMovies_Root_CA_crt.pem"
        dest: /usr/share/ca-certificates/mozilla/

    - name: Chown core CA certificate
      file:
        path: /usr/share/ca-certificates/mozilla/iMovies_Root_CA_crt.pem
        owner: root
        group: root

- hosts: all, !ansservers
  become: yes
  tasks:
    - name: Distribute root CA certificate
      synchronize:
        src: "/{{ VAGRANT_SHARED_FOLDERNAME }}/key_store/iMovies_Root_CA_crt.pem"
        dest: /usr/share/ca-certificates/mozilla/

    - name: Chown root CA certificate
      file:
        path: /usr/share/ca-certificates/mozilla/iMovies_Root_CA_crt.pem
        owner: root
        group: root

    - name: Create symlink to root CA certificate
      file:
        src: /usr/share/ca-certificates/mozilla/iMovies_Root_CA_crt.pem
        dest: /etc/ssl/certs/iMovies_Root_CA_crt.pem
        owner: root
        group: root
        state: link

- import_playbook: issue-intermediate-certs.yml
- import_playbook: issue-tls-certs.yml
