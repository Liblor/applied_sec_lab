---
- hosts: webservers
  become: yes
  roles:
    - add-to-trusted-user-group
    - asl-webserver
  vars:
    trusted_user: "{{ UNAME }}"
  vars_files:
    - /vagrant/mysql_passwords.yml

- hosts: webservers
  become: yes
  roles:
    - nginxinc.nginx
    - nginx-ssl-client
    - add-to-trusted-user-group
  vars:
    trusted_user: nginx
    ssl_client_required: false
  vars_files:
    - nginx_vars.yml

- hosts: webservers
  become: yes
  roles:
    - nginxinc.nginx
  vars:
    nginx_http_template_enable: true
    nginx_http_template:
      unencrypted:
        template_file: http/default.conf.j2
        conf_file_name: unencrypted.conf
        conf_file_location: /etc/nginx/conf.d/
        listen:
          listen_all:
            ip: 0.0.0.0
            port: 80
        server_name: "{{ ansible_hostname }}"
        web_server:
          locations:
            redirect:
              location: /
              returns:
                return301:
                  code: 301
                  url: https://$server_name$request_uri
          http_demo_conf: false
        reverse_proxy:
          locations:
            aspnet:
              location: /crl/revoked.crl
              proxy_pass: http://aspnet
              proxy_http_version: 1.1
              proxy_set_header:
                header_upgrade:
                  name: Upgrade
                  value: $http_upgrade
                header_connection:
                  name: Connection
                  value: "keep-alive"
                header_host:
                  name: Host
                  value: $host
                header_x_forwarded_for:
                  name: X-Forwarded-For
                  value: $proxy_add_x_forwarded_for
                header_x_forwarded_proto:
                  name: X-Forwarded-Proto
                  value: $scheme
